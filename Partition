# Review03-ArrayList_LinkedList
//编写代码，以给定值x为基准将链表分割成两部分，所有小于x的结点排在大于或等于x的结点之前 

public Node partition(Node head,int x) {
    //考虑三点：1.有两个新链表（都需要尾插）
    //          2.可能有一个链表是不存在的
    //          3.保证最终链表的最后一个结点的next是null
    if (head == null) {
        return null;
    }
    Node cur = head;
    Node result1 = null;  //小于给定值x的放result1
    Node result2 = null;   //大于或等于给定值x的放result2
    Node last1 = null;
    Node last2 = null;

    while (cur != null) {
        Node next = cur.next;
        if (cur.val < x) {
            if (result1 == null) {
                result1 = cur;
            } else {
                last1.next = cur;
            }
            last1 = cur;
        } else {
            if (result2 == null) {
                result2 = cur;
            } else {
                last2.next = cur;
            }
            last2 = cur;
        }
        cur = next;
    }
    if (result1 == null) {
        return result2;
    }else {
        last1.next=result2;
        if(last2!=null){//保证最终链表的最后一个结点的next是null
            last2.next=null;
        }
        return result1;
    }
}

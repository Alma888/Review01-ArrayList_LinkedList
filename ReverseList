# Review03-ArrayList_LinkedList

// 思路： 不断从原来链表中取出结点，头插到一个新链表上
//            （1）需要一个新的链表，并且是一个空链表
//                     Node result = null;   //result新链表的第一个结点的引用
//            （2）遍历原来的链表
//               Node cur = head;
//               while(cur!= null){ 
//               cur = cur.next;
//              }
//            （3）把每个遍历到的结点（cur），头插到新链表（result代表）中
//                  1. 已经有结点
//                  2. cur . next = result;
//                  3. 更新最新的第一个结点result = cur;


class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode result = null;//新的链表
        ListNode cur = head;//保存头结点
        
        while (cur != null) {
            ListNode next = cur.next;//保存头结点的下一个结点
            
            cur.next = result;//cur.next指向新链表的空域（新链表是空链表）
            result = cur;//空链表的头指针再指向当前原链表的头结点（第一个结点cur）
            
            cur = next;//再cur指向原cur所指向的第二个结点
        }   
        
        return result;//返回新链表
    }
}
